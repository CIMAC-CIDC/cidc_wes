# author: Jacob Geisberg
# year: 2022
# module: Tcell fraction calculation using Tcell ExTRECT

def tcellextrect_output_files(wildcards):
    """returns a list of filepaths generated by this module to store 
    in the CIDC for a given sample 
    """
    ls = []
    run = wildcards.run
    ls.append("analysis/tcellextrect/%s/%s_tcellextrect.txt" % (run,run))
    return ls


def tcellextrect_targets(wildcards):
    """ Generates the targets for this module"""
    ls = []
    for run in config['runs']:
        ls.append("analysis/tcellextrect/%s/%s_tcellextrect.txt" % (run,run))
    return ls

rule tcellextrect_all:
    input:
        tcellextrect_targets
    benchmark: "benchmarks/tcellextrect/tcellextrect_all.txt"

def tcellextrect_tcellextrectInputFn(wildcards):
    run = config['runs'][wildcards.run]
    tumor = run[1]

    # tmp = {}
    # if not config.get('tumor_only'): #Only run when we have normals
    #     tmp['normal'] = "analysis/align/%s/%s.sorted.dedup.bam" % (normal, normal)
    # tmp['tumor'] = "analysis/align/%s/%s.sorted.dedup.bam" % (tumor, tumor)
    # return tmp

    ls = ["analysis/align/%s/%s.sorted.dedup.bam" % (tumor, tumor)]
    return ls 

rule tcellextrect:
    """calculate Tcell fraction with Tcell ExTRECT"""
    input:
        tcellextrect_tcellextrectInputFn
    output:
       #"analysis/tcellextrect/{run}/{run}.sorted.dedup.bam.txt",
        "analysis/tcellextrect/{run}/{run}_tcellextrect.txt",
        "analysis/tcellextrect/{run}/{run}_tcellplot.pdf",
    group: "tcellextrect"
    params:
        #Change the files inputted depending on whether normal is available 
        #bam = "analysis/align/{sample}/{sample}.sorted.dedup.bam",
        bed = config['twist_regions'],
        output_dir = lambda wildcards: "analysis/tcellextrect/%s" % wildcards.run,
	run = lambda wildcards: wildcards.run,
    log: "analysis/logs/tcellextrect/{run}/{run}_tcellextrect.log.txt"
    benchmark:
        "benchmarks/tcellextrect/{run}/{run}.tcellextrect.txt"
    shell:
        """Rscript --vanilla cidc_wes/modules/scripts/tcellextrect.R {input} {params.bed} {params.output_dir} {params.run}"""



rule tcellextrect_json:
    """jsonify the T-cell fraction
    """
    input:
        "analysis/tcellextrect/{run}/{run}_tcellextrect.txt"
    output:
        "analysis/report/json/tcellextrect/{run}.tcellextrect.json"
    params:
        run = lambda wildcards: wildcards.run
    group: "tcellextrect"
    benchmark:
        "benchmarks/tcellextrect/{run}.tcellextrect_json.txt"
    shell:
        "cidc_wes/modules/scripts/json_tcellextrect.py -r {params.run} -f {input} -o {output}"